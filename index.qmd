# Overview {.unnumbered}

This is a working outline of the curricular syllabus^[and maybe eventually "textbook"-ish content] for a 15-week course on communication via [literate programming](https://www-cs-faculty.stanford.edu/~knuth/lp.html) principles for data science applications.  

Traditionally, within the social, behavioral, and management sciences, your **analyses** were performed within a *secondary* platform^[Excel, GAUSS, SAS, SPSS, STATA, etc...] -- **completely independent** from your primary authoring space (e.g., a typewriter, Word, PowerPoint). Literate programming principles obviate this orientation... the analyses and authoring have equal priority and take place within the same software space. 

Benefits of adopting a literate programming workflow include greater:  

:::: {.columns}

::: {.column width="50%"}
+ code efficiency 
+ error correction
+ collaboration
:::

::: {.column width="50%"}
+ reproducibility 
+ reuseability
:::
::::

The primary programming languages accommodated as of `r format(Sys.time(), "%B %Y")` are:  

:::: {.columns}

::: {.column width="50%"}
+ R `r fontawesome::fa("r-project", fill="#4287f5")`
+ Python {{< iconify devicon:python >}}
:::

::: {.column width="50%"}
+ Javascript {{< iconify skill-icons:javascript >}}
+ Julia {{< iconify logos:julia >}}
:::
::::

:::{.column-margin}
::: {#nte-lang .callout-note}
## Languages
The "glue" of literate programming is markdown. Programming language preferences (such as R) should be considered secondary to the more general practice of wrapping analyses into supporting documentation.
:::
:::

The focal authoring platform is [Quarto](https://quarto.org/), although historical (e.g., $\LaTeX$^[$\LaTeX$ is technically a typesetting system commonly executed within an application [such as Overleaf](https://www.overleaf.com/) that compiles $\LaTeX$ content into formatted documents.]) and contemporary alternatives (e.g., `rMarkdown`) also will be addressed. 

## Intended audience

Graduate students within the social, behavioral, and management sciences who would like to learn how to wrap analyses and supporting documentation within one authoring platform toward producing occupationally relevant... 

:::: {.columns}

::: {.column width="50%"}
+ [Presentations](https://quarto.org/docs/presentations/)
+ [Manuscripts](https://quarto.org/docs/manuscripts/)
+ [Reports](https://quarto.org/docs/visual-editor/technical.html)
:::

::: {.column width="50%"}
+ [Dashboards](https://quarto.org/docs/dashboards/)
+ [Websites](https://quarto.org/docs/websites/)
+ [Books](https://quarto.org/docs/books/)
:::
::::

Course content Version 0.1 is primarily informed by end-use-cases of Industrial Psychologists who gravitate toward data science applications, but the hope is that Versions X.X will reflect broader occupational applications. 

Full curricular content (Version 0.1) is located in @tbl-sked.

## Course schedule

```{r}
#| eval: true
#| tbl-cap: Tentative schedule
#| label: tbl-sked
#| echo: false

## `kable` is html specific - pdf kaput until alternative found

Week <- c("Week 1", "Week 2", "Week 3", "Week 4", "Week 5", "Week 6", "Week 7", "Week 8", "Week 9", "Week 10", "Week 11", "Week 12", "Week 13", "Week 14", "Week 15")
Section <- c("Fundamentals", "", "", "", "", 
             "Products", "", "", "", "", "", "", "",
             "Distribution", "")
Topic <- c("Intro",
           "Platforms",
           "Languages",
           "markdown & $\\LaTeX$",
           "html, css & packages",
                "Presentations",
                "Manuscripts",
                "Theses & Dissertations",
                "Dashboards",
                "Technical Reports",
                "Feedback Reports",
                "Websites",
                "Books",
           "Security",
           "Sharing"
           )

knitr::kable(cbind(Week,Section,Topic), escape=FALSE)

```

## Purpose 

The purpose of this course is to introduce practitioners to a work process that integrates all components of work into one platform. This is not merely "using `rMarkdown`" -- this is a broader philosophy of work. For example, reproducible research standards and principles are facilitated by adopting literate programming into work processes, but reproducibility [e.g., @stodden2014implementing] is only one of many derivatives of literate programming. 

This syllabus, for example, showcases a few pedagogical enhancements: 

+ External resources and opportunities for feedback are accessible via links in the upper right-hand toolbar. 
+ Annotation and note-taking capabilities are enabled (via [hypothesis](https://web.hypothes.is/)) and accessed via floating icons located in the far upper-right sidebar of the browser window. 
+ Screen reader functionality is enabled by default (screen-readers will pick up alternative text descriptions that are provided for each image).

These are just a few of **very many** latent features (quite easily) accessible when employing literate programming practices -- and we haven't even discussed anything "analytical" yet...

The next few pages showcase some additional capabilities currently available within literate programming platforms that may further entice a data scientist practitioner to adopt literate programming principles. 

For additional encouragement regarding literate programming adoption, please see our customer sales rep pictured in @fig-pinko.

:::{.column-margin}
![C'mon... ya know you **should be** leverage literate programming in your work!!](https://i.pinimg.com/originals/9f/37/e6/9f37e626d711c19bc303ddbde86ecc5f.png){#fig-pinko fig-alt="the pink panther, an American cartoon originating in the 1950's"}
:::


