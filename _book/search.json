[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Literate programming for the Social, Behavioral, and Management sciences",
    "section": "",
    "text": "Overview\nThis is a working outline of the curricular syllabus1 for a 15-week course on literate programming as a work process framework within data science applications. Literate programming reduces the: 1) occurrence, and 2) consequence of error within work processes.\nThe purpose of this course is to introduce practitioners to a work process that integrates all components of work into one platform. This is not merely “using rMarkdown” – this is a philosophy of work.\nTraditionally, within the social, behavioral, and management sciences, your analyses were performed within a secondary platform2 – completely independent from your primary authoring space (e.g., a typewriter, Word, PowerPoint). Literate programming principles obviate this orientation… the analyses and authoring have equal priority and take place within the same software space.\nThe primary programming languages accommodated as of December 2024 are:\nThe focal authoring platform is Quarto, although historical (e.g., \\(\\LaTeX\\)3) and contemporary alternatives (e.g., rMarkdown) also will be addressed.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "index.html#intended-audience",
    "href": "index.html#intended-audience",
    "title": "Literate programming for the Social, Behavioral, and Management sciences",
    "section": "Intended audience",
    "text": "Intended audience\nGraduate students within the social, behavioral, and management sciences who would like to learn how to wrap analyses and supporting documentation within one authoring platform toward producing occupationally relevant…\n\nPresentations\nManuscripts\nTechnical Reports\nFeedback Reports\nDashboards\nWebsites\nBooks\n\nCourse content Version 0.1 is primarily informed by end-use-cases of Industrial Psychologists who gravitate toward data science applications, but the hope is that Versions X.X will reflect broader occupational applications.\nFull curricular content (Version 0.1) is located in Table 1.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "index.html#course-schedule",
    "href": "index.html#course-schedule",
    "title": "Literate programming for the Social, Behavioral, and Management sciences",
    "section": "Course schedule",
    "text": "Course schedule\n\n\n\n\nTable 1: Tentative schedule\n\n\n\n\n\n\nWeek\nSection\nTopic\n\n\n\n\nWeek 1\nFundamentals\nIntro\n\n\nWeek 2\n\nPlatforms\n\n\nWeek 3\n\nLanguages\n\n\nWeek 4\n\nhtml & \\(\\LaTeX\\)\n\n\nWeek 5\n\ncss & packages\n\n\nWeek 6\nProducts\nPresentations\n\n\nWeek 7\n\nManuscripts\n\n\nWeek 8\n\nTheses & Dissertations\n\n\nWeek 9\n\nDashboards\n\n\nWeek 10\n\nTechnical Reports\n\n\nWeek 11\n\nFeedback Reports\n\n\nWeek 12\n\nWebsites\n\n\nWeek 13\n\nBooks\n\n\nWeek 14\nDistribution\nSecurity\n\n\nWeek 15\n\nSharing\n\n\n\n\n\n\n\n\nThe next few pages include some unique features that may entice a person to adopt literate programming principles (beyond the primary purpose of minimizing the occurence and consequence of error within someone’s work processes).\nExternal resources and opportunities for feedback are accessible via links in the upper right-hand toolbar. Annotation and note-taking capabilities are enabled via hypothesis and accessed via floating icons located in the far upper-right sidebar of the browser window. Screen reader functionality is also enabled by default (screen-readers will pick up alternative text descriptions that are provided for each image). These are just a few of very many latent features (quite easily) accessible when employing literate programming practices – and we haven’t even discussed anything “analytical” yet…\n\n\n\n\n\n\n\n\nFigure 1: C’mon… ya know you should be leverage literate programming in your work!!\n\n\n\nFor more encouragement regarding literate programming adoption, please see our customer sales rep pictured in Figure 1.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "Literate programming for the Social, Behavioral, and Management sciences",
    "section": "",
    "text": "and maybe eventually “textbook”-ish content↩︎\nExcel, GAUSS, SAS, SPSS, STATA, etc…↩︎\n\\(\\LaTeX\\) is technically a typesetting system commonly executed within an application such as Overleaf that compiles \\(\\LaTeX\\) content into formatted documents.↩︎",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "1  Analytical Summaries",
    "section": "",
    "text": "1.1 Data vizualizations\nFigure 1.1 demonstrates lightbox capabilities for images embedded within literate programming reports, whereby “clicking” isolates the image for closer inspection. This is useful for images that contain fine detail, user devices that may not display optimally, drawing focus to specific data features, and increasing accessibility for visually impaired viewers.\nFigure 1.2 demonstrates interactive components for graphical representations of data. In presentations, this may be helpful to reinforce scale(s) of measurement, obtain feedback on data clusters, and highlight differences between aggregate and individual datapoints.\nFigure 1.2: Example interactive plot",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Analytical Summaries</span>"
    ]
  },
  {
    "objectID": "summary.html#data-vizualizations",
    "href": "summary.html#data-vizualizations",
    "title": "1  Analytical Summaries",
    "section": "",
    "text": "Figure 1.1: Data visualization through a literate programming lens",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Analytical Summaries</span>"
    ]
  },
  {
    "objectID": "summary.html#geo-spatial",
    "href": "summary.html#geo-spatial",
    "title": "1  Analytical Summaries",
    "section": "1.2 Geo-spatial",
    "text": "1.2 Geo-spatial\nFigure 1.3 is another example of interactivity - a map such as this can help reinforce viewer concepts such as representativeness within normative samples (e.g., where the data “came from” and who the data represents).\n\n\n\n\n\n\n\nBrowsers vs. Static PDF Readers\n\n\n\nNote that all interactive visuals will be captured via static representation if a reader elects to download a PDF file (by accessing the button located within the toolbar). These images are not currently optimized for static representation, so interactivity will render imperfectly within the example PDF.\n\n\n\n\n\n\n\n\n\nFigure 1.3: Example normative representation by geographic location.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Analytical Summaries</span>"
    ]
  },
  {
    "objectID": "summary.html#multi-media",
    "href": "summary.html#multi-media",
    "title": "1  Analytical Summaries",
    "section": "1.3 Multi-media",
    "text": "1.3 Multi-media\nFigure 1.4 shows yet another example - videos can be pulled from external sites (like this presentation of using  to create and deploy organizational surveys) or can present locally produced video files.\n\n\n\n\n\n\nFigure 1.4: Using  to design, deploy, and store survey data",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Analytical Summaries</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Code Access",
    "section": "",
    "text": "2.1 Code sharing\nThe underlying statistical languages represent one source of error within presentations of data analysis. Literate programming authoring platforms offer several features intended to provide full transparency to the process(es) used to conduct an analysis.\nThe code represented in Listing 2.1 (and all example pieces of code) can be copied by activating the clipboard option in the upper-right hand corner of the code chunk.\nListing 2.1: Addition within R\n\n\n1 + 1\nFor more complex bits of analysis, hidden annotations are available (the audience can further access notes/assistance by hovering over the circled numbers):\n1library(psych)\n2data(bfi)\n\n3bfi$jibberish &lt;- rowMeans(bfi[1:10], na.rm=TRUE)\nbfi$gobbleyjook &lt;- rowMeans(bfi[11:20], na.rm=TRUE)\n\n\n1\n\nThe psych package contains example data that we can access.\n\n2\n\nThis gives us access to the bfi dataset that contains personality item responses.\n\n3\n\nWe make 2 scale scores, jibberish and gobbleyjook. The $ notation indicates that these scale scores will be appended to the bfi dataframe.\nThe entire code block can also be hidden unless asked-for1. These features permit students of different knowledge and confidence levels to access help on an as-needed basis:\nCode\n1library(psych)\n2data(bfi)\n\n3bfi$jibberish &lt;- rowMeans(bfi[1:10], na.rm=TRUE)\nbfi$gobbleyjook &lt;- rowMeans(bfi[11:20], na.rm=TRUE)\n\n\n\n1\n\nThe psych package contains example data that we can access.\n\n2\n\nThis gives us access to the bfi dataset that contains personality item responses.\n\n3\n\nWe make 2 scale scores, jibberish and gobbleyjook. The $ notation indicates that these scale scores will be appended to the bfi dataframe.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Code Access</span>"
    ]
  },
  {
    "objectID": "intro.html#code-sharing",
    "href": "intro.html#code-sharing",
    "title": "2  Code Access",
    "section": "",
    "text": "Tip\n\n\n\nR code can always be copied onto your personal computer via the clipboard icon: .\n\n\n\n\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Code Access</span>"
    ]
  },
  {
    "objectID": "intro.html#footnotes",
    "href": "intro.html#footnotes",
    "title": "2  Code Access",
    "section": "",
    "text": "In html format only.↩︎",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Code Access</span>"
    ]
  },
  {
    "objectID": "platforms.html",
    "href": "platforms.html",
    "title": "3  Platforms",
    "section": "",
    "text": "3.0.1 RStudio",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Platforms</span>"
    ]
  },
  {
    "objectID": "platforms.html#footnotes",
    "href": "platforms.html#footnotes",
    "title": "3  Platforms",
    "section": "",
    "text": "for example, if you intend to only use Python as an analytical language and are already comfortable using Jupyter or Spyder↩︎",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Platforms</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "References"
    ]
  }
]