# Example capabilities {#sec-summary}

## Data vizualizations


@fig-kitty demonstrates `lightbox` capabilities for Quarto book images, whereby clicking isolates the image for closer inspection.

![Oh look a cute kitty!](https://t4.ftcdn.net/jpg/06/17/03/99/360_F_617039938_XxxvNyM1tjqRDcbYt8SF60gcI3SX7pMS.jpg){#fig-kitty .lightbox}

@fig-plot demonstrates some interactive components for graphical representations of data. 

```{r}
#| fig-cap: "Example interactive plot"
#| label: fig-plot
#| echo: false
#| warning: false
#| message: false

library(plotly)

data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")


library(psych)
data(bfi)

bfi$jibberish <- rowMeans(bfi[1:10], na.rm=TRUE)
bfi$gobbleyjook <- rowMeans(bfi[11:20], na.rm=TRUE)

plot_ly(bfi, x = ~jibberish, y = ~gobbleyjook, text = ~age, type = 'scatter', mode = 'markers', color=~gender,
        marker = list(size = ~age, opacity = 0.5))

```

## Geo-spatial

@fig-map is another example of interactivity within the .html document.

::: {.callout-note}
## Browsers vs. Static PDF Readers
Note that all interactive visuals will be captured via static representation if a reader elects to download a PDF file [by accessing the button located within the toolbar]. These images are not currently optimized for static representation, so interactivity may render oddly within the example PDF. 
:::

```{r}
#| fig-cap: "Example of interactive graph"
#| label: fig-map
#| echo: false
#| warning: false
#| message: false

library(leaflet)
library(htmlwidgets)

content <- paste(sep = "<br/>",
  "<b><a href='https://ergweb.netlify.app/'>erg HQ</a></b>",
  "945 Broadway St NE",
  "Minneapolis, MN 55413"
)

hc_gdpr <- leaflet() %>%
  setView(lng= -93.24649681376336, lat=44.99948959471243, zoom=16) %>%
  addTiles() %>%
  addPopups(-93.24649681376336, 44.99948959471243, content,
    options = popupOptions(closeButton = FALSE)
  )


htmlwidgets::saveWidget(hc_gdpr, "hc_gdpr.html", selfcontained = TRUE, knitrOptions = list())
widgetframe::frameWidget(hc_gdpr) ## trying for online
```

## Multi-media

@fig-pink shows yet another example - videos can be pulled from external sites (like this clip) or can be locally produced video files.

::: {#fig-pink}

{{< video https://www.youtube.com/watch?v=ZI8jjbhm4OE >}}

A tribute to the current tutorial author

:::
